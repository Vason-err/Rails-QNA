- if answer.persisted?
  .answer id='answer-id-#{answer.id}' class=('best' if answer.best)
    p = answer.body

    = render "/votes/vote_block", vote: (current_user&.vote_by(answer) || answer.votes.new), voteable: answer
     = render "/votes/vote_rating", vote: @vote, voteable: answer

    - if answer.files.attached?
      - answer.files.each do |file|
        = render '/files/file', file: file

    - if answer&.links.present?
      = render 'links/index', resource: answer

    - if user_signed_in?
      - if can?(:mark_as_best, answer)
        p.mark-as-best = link_to 'Mark as best', mark_as_best_answer_path(answer), method: :post, remote: true

      - if can?(:update, answer)
        p = link_to 'Edit answer', '#', class: 'edit-answer-link', data: { answer_id: answer.id }

        .edit-answer-form
          .answer-errors
          = render 'answers/edit_form', answer: answer
      - if can?(:destroy, answer)
        p = link_to 'Delete answer', answer_path(answer), method: :delete, remote: true

      p New comment
      .new-comment-form
        .comment-errors
        = render '/comments/form', commentable: answer

    p Comments
    .answer-comments
      = render answer.comments.order(created_at: :asc)
